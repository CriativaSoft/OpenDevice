#********************************************************************
# JVM Parameters
#********************************************************************

# Java Heap Size: by default the Java heap size is dynamically
# calculated based on available system resources.
# Uncomment these lines to set specific initial and maximum
# heap size in MB.
# For Raspberry/Beaglebone use: 16 initial and 100 max must be sufficient
odev.memory.heap.initial_size=16
odev.memory.heap.max_size=100



# Debug - uncomment to enable
#odev.jvm.additional=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000

# G1GC generally strikes a good balance between throughput and tail
# latency, without too much tuning.
odev.jvm.additional=-XX:+UseG1GC

# Have common exceptions keep producing stack traces, so they can be
# debugged regardless of how often logs are rotated.
#odev.jvm.additional=-XX:-OmitStackTraceInFastThrow

# Reduce probability of objects getting the same identity hash code
# via a race, by computing them with thread-local PRNGs.
#odev.jvm.additional=-XX:hashCode=5

# Make sure that `initmemory` is not only allocated, but committed to
# the process, before starting the database. This reduces memory
# fragmentation, increasing the effectiveness of transparent huge
# pages. It also reduces the possibility of seeing performance drop
# due to heap-growing GC events, where a decrease in available page
# cache leads to an increase in mean IO response time.
# Try reducing the heap memory, if this flag degrades performance.
# (Neo4j Setting): Enable if you use Neo4j
odev.jvm.additional=-XX:+AlwaysPreTouch

# Trust that non-static final fields are really final.
# This allows more optimisations and improves overall performance.
# NOTE: Disable this if you use embedded mode, or have extensions or depencies that may use reflection or serialization
# to change the value of final fields!
#odev.jvm.additional=-XX:+UnlockExperimentalVMOptions
#odev.jvm.additional=-XX:+TrustFinalNonStaticFields

# (Neo4j Setting):
# Disable explicit garbage collection, which is occasionally invoked by the JDK itself.
#odev.jvm.additional=-XX:+DisableExplicitGC

# (Remote JMX monitoring)
# Also make sure to update the jmx.access and jmx.password files with appropriate permission roles and passwords,
# For more details, see: http://download.oracle.com/javase/8/docs/technotes/guides/management/agent.html
# On Unix/Linux the jmx.password file needs to be owned by the user that will run the server,
# and have permissions set to 0600.
#odev.jvm.additional=-Dcom.sun.management.jmxremote.port=3637
#odev.jvm.additional=-Dcom.sun.management.jmxremote.authenticate=true
#odev.jvm.additional=-Dcom.sun.management.jmxremote.ssl=false
#odev.jvm.additional=-Dcom.sun.management.jmxremote.password.file=conf/jmx.password
#odev.jvm.additional=-Dcom.sun.management.jmxremote.access.file=conf/jmx.access


# (Neo4j Setting):
# Expand Diffie Hellman (DH) key size from default 1024 to 2048 for DH-RSA cipher suites used in server TLS handshakes.
# This is to protect the server from any potential passive eavesdropping.
#odev.jvm.additional=-Djdk.tls.ephemeralDHKeySize=2048

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
odev.windows_service_name=opendevice

